d = list(input('아버지의 혈액형을 입력하세요 Ex) A :  '))
if len(d) == 2 :#AB,O형의 경우에는 표현형만으로 유전자형이 결정-부친이 AB형인 경우
    d.append('A')
    d.append('B')
elif d[0] == 'O' :#부친이 O형인 경우
    d.append('O')
    d.append('O')
    d.append('O')
elif d[0] == 'A' :
    dd = input('친할아버지의 혈액형을 입력하세요 :') #A,B 형의 경우 같은 표현형을 가지더라도 유전자형이 다를 수 있음.
    dm = input('친할머니의 혈액형을 입력하세요 :')# 부계 혈통의 결정을 통해 부친의 유전자형 결정. B형의 경우
    if dd == 'B' or dd == 'O' or dm == 'B' or dm == 'O' :
        d.append('O')
        d.append('A')
        d.append('O')
    elif dd == 'AB' and dm == 'AB' :
        d.append('A')
        d.append('A')
        d.append('A')
    else:
        d.append('A')
        d.append('A')
        d.append('O')
else :
    dd = input('친할아버지의 혈액형을 입력하세요 :')# 부계 혈통의 결정을 통해 부친의 유전자형 결정. A형의 경우
    dm = input('친할머니의 혈액형을 입력하세요 :')
    if dd == 'A' or dd == 'O' or dm == 'A' or dm == 'O' :
        d.append('O')
        d.append('B')
        d.append('O')
    elif dd == 'AB' and dm == 'AB' :
        d.append('B')
        d.append('B')
        d.append('B')
    else :
        d.append('B')
        d.append('B')
        d.append('O')

m = list(input('어머니의 혈액형을 입력하세요 Ex) A :  '))
if len(m) == 2 :#AB,O형의 경우에는 표현형만으로 유전자형이 결정-모친이 AB형인 경우
    m.append('A')
    m.append('B')
elif m[0] == 'O' :#모친이 O형인 경우
    m.append('O')
    m.append('O')
    m.append('O')
elif m[0] == 'A' :
    md = input('외할아버지의 혈액형을 입력하세요 :')#A,B 형의 경우 같은 표현형을 가지더라도 유전자형이 다를 수 있음.
    mm = input('외할머니의 혈액형을 입력하세요 :')# 모계 혈통의 결정을 통해 모친의 유전자형 결정 B형의 경우.
    if md == 'B' or md == 'O' or mm == 'B' or mm == 'O' :
        m.append('O')
        m.append('A')
        m.append('O')
    elif md == 'AB' and mm == 'AB' :
        m.append('A')
        m.append('A')
        m.append('A')
    else:
        m.append('A')
        m.append('A')
        m.append('O')
else :
    md = input('외할아버지의 혈액형을 입력하세요 :')# 모계 혈통의 결정을 통해 모친의 유전자형 결정. A형의 경우
    mm = input('외할머니의 혈액형을 입력하세요 :')
    if md == 'A' or md == 'O' or mm == 'A' or mm == 'O' :
        m.append('O')
        m.append('B')
        m.append('O')
    elif md == 'AB' and mm == 'AB' :
        m.append('B')
        m.append('B')
        m.append('B')
    else :
        m.append('B')
        m.append('B')
        m.append('O')
son = []
for a in range(0,4) :#유전 과정. 유전자형의 배합.
    for b in range(0,4) : 
        son.append(d[a]+m[b])


for i in range(0,16) :#유전자형을 일반적인 표기법으로 정렬.
    if son[i] == 'BA' :
        son[i] = 'AB'
    elif son[i] == 'OA' :
        son[i] = 'AO'
    elif son[i] == 'OB' :
        son[i] = 'BO'
        
cAB = 6.25 * (son.count('AB'))
cAO = 6.25 * (son.count('AO'))
cAA = 6.25 * (son.count('AA'))
cBB = 6.25 * (son.count('BB'))
cBO = 6.25 * (son.count('BO'))
cOO = 6.25 * (son.count('OO'))
pro = {"AO": cAO, "AA": cAA, "AB": cAB, "BO": cBO, "BB": cBB, "OO" : cOO}
print(pro)

import matplotlib.pyplot as plt
plt.figure(figsize=(3,2), dpi=300)

#value값이 0인 key들 제거
delkey=[]#유전자형의 O 인자는 표현형에 영향을 끼치지 못함. 제거하여 일반적인 혈액형으로 표기.
for i in pro:
    if pro[i]==0.0:
        delkey.append(i)
for i in delkey:
    del pro[i]
        
#pro에서 size와 labels 제작
labels = list(pro.keys())
size = list(pro.values())

#수에 맞는 색을 팔레트에서 추출
palette = ['hotpink', 'red', 'blueviolet', 'blue','lightskyblue','lightgray']
colors = []
for i in pro:
    colors.append(palette.pop())

plt.title('blood type')
plt.pie(size, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)

plt.axis('equal')
plt.show()
